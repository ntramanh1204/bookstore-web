<?xml version="1.0" encoding="UTF-8"?>
<project name="Bookabook" default="jar" basedir="." xmlns:sonar="antlib:org.sonar.ant">
    <description>Builds, tests, and runs the project Bookabook.</description>
    <import file="nbproject/build-impl.xml"/>

    <property name="src.dir" location="src"/>
    <property name="build.dir" location="build"/>
    <property name="dist.dir" location="dist"/>
    <property name="ant.project.name" value="Bookabook"/>
    <property name="web.dir" location="web"/>
    <property name="lib.dir" location="lib"/>
    <!-- <property name="main.class" value="your.package.MainClass"/> -->
    <!-- <property name="tomcat.dir" value="D:/apache-tomcat-11.0.0-M21"/> -->
    <property environment="env"/>
    <property name="tomcat.dir" value="${env.CATALINA_HOME}"/>

    <!-- Define the SonarQube project properties -->
    <property name="sonar.host.url" value="http://localhost:9000"/>
    <property name="sonar.login" value="sqp_4612127d11c631a4644311baf390a8ed9f9eff26" />
    <property name="sonar.projectKey" value="Bookabook"/>
    <property name="sonar.projectName" value="Bookabook"/>
    <property name="sonar.projectVersion" value="1.0"/>
    <property name="sonar.sources" value="src"/>
    <property name="sonar.java.binaries" value="build/classes"/>
    <property name="sonar.java.libraries" value="lib/*.jar"/>


    <!-- Define SonarQube Acanner for Ant Target -->
    <target name="sonar" depends="compile" if="sonar.available">
        <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
            <classpath path="lib\sonarqube-ant-task-2.7.1.1951.jar"/>
        </taskdef>
        <sonar:sonar/>
    </target>
        

    <path id="project.classpath">
        <pathelement location="${build.dir}/classes"/>
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <target name="init">
        <mkdir dir="${build.dir}/classes"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" destdir="${build.dir}/classes" includeantruntime="false">
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <jar destfile="${dist.dir}/${ant.project.name}.jar" basedir="${build.dir}/classes">
            <!-- <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest> -->
        </jar>
    </target>

    <target name="war" depends="compile">
    <war destfile="${dist.dir}/${ant.project.name}.war" webxml="${web.dir}/WEB-INF/web.xml">
        <classes dir="${build.dir}/classes"/>
        <lib dir="${lib.dir}"/>
        <webinf dir="${web.dir}/WEB-INF"/>
        <metainf dir="${web.dir}/META-INF"/>
        <fileset dir="${web.dir}" excludes="WEB-INF/** META-INF/**"/> <manifest>
            <attribute name="Main-Class" value="${main.class}"/>        
        </manifest>
    </war>
</target>


    <target name="run" depends="jar">
        <java jar="${dist.dir}/${ant.project.name}.jar" fork="true"/>
    </target>

    <target name="deploy" depends="war">
        <!-- Copy the WAR file to Tomcat webapps directory -->
        <copy file="dist\Bookabook.war" todir="${tomcat.dir}/webapps"/>
        <!-- <echo message="Deployed to Tomcat!"/> -->
    </target>

    <target name="undeploy">
        <!-- Undeploy the application from Tomcat -->
        <delete file="${tomcat.dir}/webapps/${ant.project.name}" failonerror="false"/>
        <delete dir="${tomcat.dir}/webapps/${ant.project.name}" failonerror="false"/>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="default" depends="jar"/> 
</project>
